# Default values for metrics-accumulator.
# This is a YAML-formatted file.

# Replica count
replicaCount: 1

image:
  # Sử dụng image từ bpoole6/metrics-accumulator hoặc custom image
  repository: bpoole6/metrics-accumulator
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: metrics-accumulator.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: metrics-accumulator-tls
  #    hosts:
  #      - metrics-accumulator.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence for metrics storage
persistence:
  enabled: false
  # accessMode: ReadWriteOnce
  # size: 1Gi
  # storageClass: ""
  # mountPath: /data

# Environment variables
env: []
# - name: ENV_VAR_NAME
#   value: "value"

# Liveness and readiness probes
livenessProbe:
  exec:
    command:
      - wget
      - -O
      - '-'
      - http://localhost:8080
  initialDelaySeconds: 0
  periodSeconds: 20
  timeoutSeconds: 2
  failureThreshold: 5

readinessProbe:
  exec:
    command:
      - wget
      - -O
      - '-'
      - http://localhost:8080
  initialDelaySeconds: 0
  periodSeconds: 20
  timeoutSeconds: 2
  failureThreshold: 5

# ServiceMonitor configuration for Prometheus Operator
serviceMonitor:
  enabled: false
  namespace: ""
  interval: "30s"
  scrapeTimeout: "10s"
  path: "/metrics"
  labels: {}
  annotations: {}

# NetworkPolicy
networkPolicy:
  enabled: false
  policyTypes: []
  ingress: []
  egress: []

# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1

# Extra configuration
extraArgs: []
extraEnvFrom: []

# Init containers
initContainers: []

# Additional containers
extraContainers: []

# Configuration file for metrics-accumulator (raw YAML content)
# If this field is non-empty a ConfigMap will be generated and mounted to the pod at
#   /etc/metrics-accumulator/metrics-accumulator.yml
# The application is started with the argument:
#   --config-file=/etc/metrics-accumulator/metrics-accumulator.yml
# so it will automatically pick up the configuration you place here.
#
# === How to customise ===
# 1. Copy the block below, remove the leading "# " and adapt values as required.
# 2. Keep correct YAML indentation (2 spaces).
# 3. Leave this key completely empty (i.e. "config: |\n" with nothing below) if you
#    prefer to rely on the container defaults.
#
# --- Ví dụ tối giản ---------------------------------------------------------
# global:
#   hostAddress: metrics-accumulator:8080   # Địa chỉ service
# metricGroups:
#   default:
#     apiKey: "<your-api-key>"             # Key cần gửi trong header X-API-KEY
#     serviceDiscoveryLabels:
#       env: dev                            # Nhãn mặc định Prometheus
# ---------------------------------------------------------------------------

config: |
# (uncomment and customise as shown in the sample above) 